// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  image        String?
  email        String   @unique
  password     String
  role         String
  createAt     DateTime @default(now())
  updateAt     DateTime @updatedAt
  accessToken  String?
  refreshToken String?
  expires      Int?
}

model Anime {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  des          String
  duration     String?
  videoUrl     String
  thumbnailUrl String
  view         Int?
  rating       Int?
  genres       Genre[]  @relation(fields: [genreIds], references: [id])
  genreIds     String[] @db.ObjectId
  firm         TheFirm  @relation(fields: [firmId], references: [id])
  firmId       String   @db.ObjectId
  release      Release  @relation(fields: [releaseId], references: [id])
  releaseId    String   @db.ObjectId
  locale       Locale   @relation(fields: [localeId], references: [id])
  localeId     String   @db.ObjectId
  animeJA      AnimeJA?
  animeEN      AnimeEN?
  animeVI      AnimeVI?

  @@unique([videoUrl, thumbnailUrl])
}

model AnimeJA {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  name    String @unique
  anime   Anime  @relation(fields: [animeId], references: [id])
  animeId String @unique @db.ObjectId
}

model AnimeEN {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  name    String @unique
  anime   Anime  @relation(fields: [animeId], references: [id])
  animeId String @unique @db.ObjectId
}

model AnimeVI {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  name    String @unique
  anime   Anime  @relation(fields: [animeId], references: [id])
  animeId String @unique @db.ObjectId
}

model Genre {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  genre    String   @unique
  des      String
  animes   Anime[]  @relation(fields: [animeIds], references: [id])
  animeIds String[] @db.ObjectId
}

model RefreshToken {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  refreshToken String
}

model TheFirm {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  animes Anime[]
}

model Release {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  year   Int
  animes Anime[]
}

model Locale {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  locale String
  des    String
  animes Anime[]
}
